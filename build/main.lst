ARM GAS  C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemClock_Config,"ax",%progbits
  16              		.align	1
  17              		.global	SystemClock_Config
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	SystemClock_Config:
  25              	.LFB79:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "cmsis_os.h"
  24:Src/main.c    **** #include "fatfs.h"
  25:Src/main.c    **** #include "gpio.h"
  26:Src/main.c    **** #include "fsmc.h"
  27:Src/main.c    **** 
  28:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  29:Src/main.c    **** /* USER CODE BEGIN Includes */
  30:Src/main.c    **** #include "lcd.h"
  31:Src/main.c    **** /* USER CODE END Includes */
  32:Src/main.c    **** 
ARM GAS  C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s 			page 2


  33:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  34:Src/main.c    **** /* USER CODE BEGIN PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE END PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PD */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  44:Src/main.c    **** /* USER CODE BEGIN PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE END PM */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  55:Src/main.c    **** void SystemClock_Config(void);
  56:Src/main.c    **** void MX_FREERTOS_Init(void);
  57:Src/main.c    **** /* USER CODE BEGIN PFP */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PFP */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN 0 */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /**
  67:Src/main.c    ****   * @brief  The application entry point.
  68:Src/main.c    ****   * @retval int
  69:Src/main.c    ****   */
  70:Src/main.c    **** int main(void)
  71:Src/main.c    **** {
  72:Src/main.c    ****   /* USER CODE BEGIN 1 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* USER CODE END 1 */
  75:Src/main.c    ****   
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  80:Src/main.c    ****   HAL_Init();
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* USER CODE BEGIN Init */
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE END Init */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* Configure the system clock */
  87:Src/main.c    ****   SystemClock_Config();
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE BEGIN SysInit */
ARM GAS  C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE END SysInit */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* Initialize all configured peripherals */
  94:Src/main.c    ****   MX_GPIO_Init();
  95:Src/main.c    ****   MX_FSMC_Init();
  96:Src/main.c    ****   /* USER CODE BEGIN 2 */
  97:Src/main.c    ****   LCD_INIT();
  98:Src/main.c    ****   /* USER CODE END 2 */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* Call init function for freertos objects (in freertos.c) */
 101:Src/main.c    ****   MX_FREERTOS_Init();
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* Start scheduler */
 104:Src/main.c    ****   osKernelStart();
 105:Src/main.c    ****   
 106:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* Infinite loop */
 109:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 110:Src/main.c    ****   while (1)
 111:Src/main.c    ****   {
 112:Src/main.c    ****     /* USER CODE END WHILE */
 113:Src/main.c    **** 
 114:Src/main.c    ****     /* USER CODE BEGIN 3 */
 115:Src/main.c    ****   }
 116:Src/main.c    ****   /* USER CODE END 3 */
 117:Src/main.c    **** }
 118:Src/main.c    **** 
 119:Src/main.c    **** /**
 120:Src/main.c    ****   * @brief System Clock Configuration
 121:Src/main.c    ****   * @retval None
 122:Src/main.c    ****   */
 123:Src/main.c    **** void SystemClock_Config(void)
 124:Src/main.c    **** {
  27              		.loc 1 124 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 64
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 91B0     		sub	sp, sp, #68
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 80
 125:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  40              		.loc 1 125 3 view .LVU1
  41              		.loc 1 125 22 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0894     		str	r4, [sp, #32]
  44 0008 0994     		str	r4, [sp, #36]
  45 000a 0B94     		str	r4, [sp, #44]
  46 000c 0C94     		str	r4, [sp, #48]
 126:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s 			page 4


  47              		.loc 1 126 3 is_stmt 1 view .LVU3
  48              		.loc 1 126 22 is_stmt 0 view .LVU4
  49 000e 0194     		str	r4, [sp, #4]
  50 0010 0294     		str	r4, [sp, #8]
  51 0012 0394     		str	r4, [sp, #12]
  52 0014 0494     		str	r4, [sp, #16]
  53 0016 0594     		str	r4, [sp, #20]
 127:Src/main.c    **** 
 128:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 129:Src/main.c    ****   */
 130:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  54              		.loc 1 130 3 is_stmt 1 view .LVU5
  55              		.loc 1 130 36 is_stmt 0 view .LVU6
  56 0018 0122     		movs	r2, #1
  57 001a 0692     		str	r2, [sp, #24]
 131:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  58              		.loc 1 131 3 is_stmt 1 view .LVU7
  59              		.loc 1 131 30 is_stmt 0 view .LVU8
  60 001c 4FF48033 		mov	r3, #65536
  61 0020 0793     		str	r3, [sp, #28]
 132:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  62              		.loc 1 132 3 is_stmt 1 view .LVU9
 133:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  63              		.loc 1 133 3 view .LVU10
  64              		.loc 1 133 30 is_stmt 0 view .LVU11
  65 0022 0A92     		str	r2, [sp, #40]
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  66              		.loc 1 134 3 is_stmt 1 view .LVU12
  67              		.loc 1 134 34 is_stmt 0 view .LVU13
  68 0024 0225     		movs	r5, #2
  69 0026 0D95     		str	r5, [sp, #52]
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  70              		.loc 1 135 3 is_stmt 1 view .LVU14
  71              		.loc 1 135 35 is_stmt 0 view .LVU15
  72 0028 0E93     		str	r3, [sp, #56]
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  73              		.loc 1 136 3 is_stmt 1 view .LVU16
  74              		.loc 1 136 32 is_stmt 0 view .LVU17
  75 002a 4FF4E013 		mov	r3, #1835008
  76 002e 0F93     		str	r3, [sp, #60]
 137:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  77              		.loc 1 137 3 is_stmt 1 view .LVU18
  78              		.loc 1 137 7 is_stmt 0 view .LVU19
  79 0030 06A8     		add	r0, sp, #24
  80 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
  81              	.LVL0:
 138:Src/main.c    ****   {
 139:Src/main.c    ****     Error_Handler();
 140:Src/main.c    ****   }
 141:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 142:Src/main.c    ****   */
 143:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  82              		.loc 1 143 3 is_stmt 1 view .LVU20
  83              		.loc 1 143 31 is_stmt 0 view .LVU21
  84 0036 0F23     		movs	r3, #15
  85 0038 0193     		str	r3, [sp, #4]
 144:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s 			page 5


 145:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  86              		.loc 1 145 3 is_stmt 1 view .LVU22
  87              		.loc 1 145 34 is_stmt 0 view .LVU23
  88 003a 0295     		str	r5, [sp, #8]
 146:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  89              		.loc 1 146 3 is_stmt 1 view .LVU24
  90              		.loc 1 146 35 is_stmt 0 view .LVU25
  91 003c 0394     		str	r4, [sp, #12]
 147:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  92              		.loc 1 147 3 is_stmt 1 view .LVU26
  93              		.loc 1 147 36 is_stmt 0 view .LVU27
  94 003e 4FF48063 		mov	r3, #1024
  95 0042 0493     		str	r3, [sp, #16]
 148:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  96              		.loc 1 148 3 is_stmt 1 view .LVU28
  97              		.loc 1 148 36 is_stmt 0 view .LVU29
  98 0044 0594     		str	r4, [sp, #20]
 149:Src/main.c    **** 
 150:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  99              		.loc 1 150 3 is_stmt 1 view .LVU30
 100              		.loc 1 150 7 is_stmt 0 view .LVU31
 101 0046 2946     		mov	r1, r5
 102 0048 01A8     		add	r0, sp, #4
 103 004a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 104              	.LVL1:
 151:Src/main.c    ****   {
 152:Src/main.c    ****     Error_Handler();
 153:Src/main.c    ****   }
 154:Src/main.c    **** }
 105              		.loc 1 154 1 view .LVU32
 106 004e 11B0     		add	sp, sp, #68
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 12
 109              		@ sp needed
 110 0050 30BD     		pop	{r4, r5, pc}
 111              		.cfi_endproc
 112              	.LFE79:
 114              		.section	.text.main,"ax",%progbits
 115              		.align	1
 116              		.global	main
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu softvfp
 122              	main:
 123              	.LFB78:
  71:Src/main.c    ****   /* USER CODE BEGIN 1 */
 124              		.loc 1 71 1 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ Volatile: function does not return.
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129 0000 08B5     		push	{r3, lr}
 130              	.LCFI3:
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 3, -8
 133              		.cfi_offset 14, -4
ARM GAS  C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s 			page 6


  80:Src/main.c    **** 
 134              		.loc 1 80 3 view .LVU34
 135 0002 FFF7FEFF 		bl	HAL_Init
 136              	.LVL2:
  87:Src/main.c    **** 
 137              		.loc 1 87 3 view .LVU35
 138 0006 FFF7FEFF 		bl	SystemClock_Config
 139              	.LVL3:
  94:Src/main.c    ****   MX_FSMC_Init();
 140              		.loc 1 94 3 view .LVU36
 141 000a FFF7FEFF 		bl	MX_GPIO_Init
 142              	.LVL4:
  95:Src/main.c    ****   /* USER CODE BEGIN 2 */
 143              		.loc 1 95 3 view .LVU37
 144 000e FFF7FEFF 		bl	MX_FSMC_Init
 145              	.LVL5:
  97:Src/main.c    ****   /* USER CODE END 2 */
 146              		.loc 1 97 3 view .LVU38
 147 0012 FFF7FEFF 		bl	LCD_INIT
 148              	.LVL6:
 101:Src/main.c    **** 
 149              		.loc 1 101 3 view .LVU39
 150 0016 FFF7FEFF 		bl	MX_FREERTOS_Init
 151              	.LVL7:
 104:Src/main.c    ****   
 152              		.loc 1 104 3 view .LVU40
 153 001a FFF7FEFF 		bl	osKernelStart
 154              	.LVL8:
 155              	.L4:
 110:Src/main.c    ****   {
 156              		.loc 1 110 3 discriminator 1 view .LVU41
 115:Src/main.c    ****   /* USER CODE END 3 */
 157              		.loc 1 115 3 discriminator 1 view .LVU42
 158 001e FEE7     		b	.L4
 159              		.cfi_endproc
 160              	.LFE78:
 162              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 163              		.align	1
 164              		.global	HAL_TIM_PeriodElapsedCallback
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu softvfp
 170              	HAL_TIM_PeriodElapsedCallback:
 171              	.LVL9:
 172              	.LFB80:
 155:Src/main.c    **** 
 156:Src/main.c    **** /* USER CODE BEGIN 4 */
 157:Src/main.c    **** 
 158:Src/main.c    **** /* USER CODE END 4 */
 159:Src/main.c    **** 
 160:Src/main.c    **** /**
 161:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 162:Src/main.c    ****   * @note   This function is called  when TIM7 interrupt took place, inside
 163:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 164:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 165:Src/main.c    ****   * @param  htim : TIM handle
ARM GAS  C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s 			page 7


 166:Src/main.c    ****   * @retval None
 167:Src/main.c    ****   */
 168:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 169:Src/main.c    **** {
 173              		.loc 1 169 1 view -0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		.loc 1 169 1 is_stmt 0 view .LVU44
 178 0000 08B5     		push	{r3, lr}
 179              	.LCFI4:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 3, -8
 182              		.cfi_offset 14, -4
 170:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 171:Src/main.c    **** 
 172:Src/main.c    ****   /* USER CODE END Callback 0 */
 173:Src/main.c    ****   if (htim->Instance == TIM7) {
 183              		.loc 1 173 3 is_stmt 1 view .LVU45
 184              		.loc 1 173 11 is_stmt 0 view .LVU46
 185 0002 0268     		ldr	r2, [r0]
 186              		.loc 1 173 6 view .LVU47
 187 0004 034B     		ldr	r3, .L10
 188 0006 9A42     		cmp	r2, r3
 189 0008 00D0     		beq	.L9
 190              	.LVL10:
 191              	.L6:
 174:Src/main.c    ****     HAL_IncTick();
 175:Src/main.c    ****   }
 176:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 177:Src/main.c    **** 
 178:Src/main.c    ****   /* USER CODE END Callback 1 */
 179:Src/main.c    **** }
 192              		.loc 1 179 1 view .LVU48
 193 000a 08BD     		pop	{r3, pc}
 194              	.LVL11:
 195              	.L9:
 174:Src/main.c    ****     HAL_IncTick();
 196              		.loc 1 174 5 is_stmt 1 view .LVU49
 197 000c FFF7FEFF 		bl	HAL_IncTick
 198              	.LVL12:
 199              		.loc 1 179 1 is_stmt 0 view .LVU50
 200 0010 FBE7     		b	.L6
 201              	.L11:
 202 0012 00BF     		.align	2
 203              	.L10:
 204 0014 00140040 		.word	1073746944
 205              		.cfi_endproc
 206              	.LFE80:
 208              		.section	.text.Error_Handler,"ax",%progbits
 209              		.align	1
 210              		.global	Error_Handler
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu softvfp
 216              	Error_Handler:
ARM GAS  C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s 			page 8


 217              	.LFB81:
 180:Src/main.c    **** 
 181:Src/main.c    **** /**
 182:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 183:Src/main.c    ****   * @retval None
 184:Src/main.c    ****   */
 185:Src/main.c    **** void Error_Handler(void)
 186:Src/main.c    **** {
 218              		.loc 1 186 1 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 187:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 188:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 189:Src/main.c    **** 
 190:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 191:Src/main.c    **** }
 223              		.loc 1 191 1 view .LVU52
 224 0000 7047     		bx	lr
 225              		.cfi_endproc
 226              	.LFE81:
 228              		.text
 229              	.Letext0:
 230              		.file 2 "D:\\MinGW\\include/stdint.h"
 231              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
 232              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 233              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 234              		.file 6 "D:\\MinGW\\include/stdio.h"
 235              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 236              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 237              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 238              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 239              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_fsmc.h"
 240              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_sram.h"
 241              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 242              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 243              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 244              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 245              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 246              		.file 18 "Middlewares/Third_Party/FatFs/src/integer.h"
 247              		.file 19 "Middlewares/Third_Party/FatFs/src/ff.h"
 248              		.file 20 "Middlewares/Third_Party/FatFs/src/diskio.h"
 249              		.file 21 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 250              		.file 22 "Inc/user_diskio.h"
 251              		.file 23 "Inc/fatfs.h"
 252              		.file 24 "Inc/fsmc.h"
 253              		.file 25 "Inc/gpio.h"
 254              		.file 26 "Inc/lcd.h"
ARM GAS  C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s:16     .text.SystemClock_Config:00000000 $t
C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s:24     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s:115    .text.main:00000000 $t
C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s:122    .text.main:00000000 main
C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s:163    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s:170    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s:204    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s:209    .text.Error_Handler:00000000 $t
C:\Users\xxy\AppData\Local\Temp\ccIPGblf.s:216    .text.Error_Handler:00000000 Error_Handler

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_FSMC_Init
LCD_INIT
MX_FREERTOS_Init
osKernelStart
HAL_IncTick
